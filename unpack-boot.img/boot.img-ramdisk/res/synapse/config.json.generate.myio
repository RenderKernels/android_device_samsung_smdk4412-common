#!/sbin/busybox sh

cat << CTAG
{
    name:"I/O & RAM",
    elements:[
    	{ SDescription:{
        	description:"\n\tSettings pertaining to I/O and memory. Including storage schedulers, read-ahead values, UKSM, and ZRAM (swap).\n\n",
        	background:0
        }},
		{ SPane:{
		title:"I/O Schedulers",
		description:"\n\tSet the active I/O elevator algorithms. The scheduler decides how to handle I/O requests.\n"
        }},
        { SOptionList:{
		   title:"Internal Storage Scheduler",
		   description:"",
		   default:zen,
		   action:"bracket-option /sys/block/mmcblk0/queue/scheduler",
		   values:[
				noop,
				deadline,
				row,
				cfq,
				bfq,
				sio,
				zen,
				vr
			]
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SOptionList:{
		   title:"MicroSD Card Storage Scheduler",
		   description:"",
		   default:zen,
		   action:"bracket-option /sys/block/mmcblk1/queue/scheduler",
		   values:[
				noop,
				deadline,
				row,
				cfq,
				bfq,
				sio,
				zen,
				vr
			]
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SPane:{
		title:"I/O Read-Ahead",
		description:"\n\tThe read-ahead value is the requested block size the host controller reads into memory on any given I/O read request. Increasing the read-ahead on cards with high latency and lower IOPS will increase the raw throughput.\n"
        }},
        { SSeekBar:{
       		title:"Internal Storage Read-Ahead",
			description:"The read-ahead value on the device's internal memory.\n",
			default:128,
			max:2048,
			min:0,
			step:128,
			unit:" kB",
			action:"generic /sys/block/mmcblk0/queue/read_ahead_kb",
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SSeekBar:{
       		title:"MicroSD Card Storage Read-Ahead",
			description:"The read-ahead value on the microSD card.\n",
			default:128,
			max:2048,
			min:0,
			step:128,
			unit:" kB",
			action:"generic /sys/block/mmcblk1/queue/read_ahead_kb",
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SPane:{
		title:"Frandom Module",
		description:"\n\tFrandom is a kernel random number generator that is many times faster than the standard urandom. Enabling this may slightly reduce battery life.\n"
        }},
		{ SCheckBox:{
			description:"\tNote: After changing this value you MUST REBOOT for changes to take effect!\nDefault: On",
			label:"Enable Frandom",
			default:1,
        	action:"generic /data/.shift/setting_frandom"
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SPane:{
		title:"Kernel Samepage Merging (KSM)",
		description:"\n\tUKSM stands for Kernel Samepage Merging (also called Kernel Shared Memory). KSM detects when two memory (RAM) pages are identical, and stores only one of them. Ultra-KSM has a daemon that repeatedly scans memory (RAM) and looks for duplicate pages it can free. Since the act of doing this requires processing, it may affect battery life at the cost of more free memory (RAM).\n"
        }},
        { SCheckBox:{
			description:"Default: Off",
			label:"Enable UKSM",
			default:0,
        	action:"generic /sys/kernel/mm/ksm/run"
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SSeekBar:{
       		title:"Swappiness",
			description:"A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space.\n",
			default:90,
			max:100,
			min:0,
			step:5,
			unit:"%",
			action:"generic /proc/sys/vm/swappiness",
		}},
		{ SSpacer:{
		   height:1
		}},
		{ SPane:{
		title:"Dynamic Fsync",
		description:"\n\tfsync() serves as a flush/commit to the write buffer when doing I/O writes to storage. It stores a buffer with data and periodically writes it to the storage device after the screen gets turned off. Should you have a crash while your screen is on, data corruption WILL almost certainty result. Only for stable systems. Disabling it will no longer buffer and directly write the data, which is slower but safer.\n"
        }},
        { SCheckBox:{
			description:"Default: Off",
			label:"Enable Dynamic Fsync",
			default:0,
        	action:"generic /sys/kernel/dyn_fsync/Dyn_fsync_active"
		}},
		{ SSpacer:{
		   height:1
		}},
    ]
}

CTAG
